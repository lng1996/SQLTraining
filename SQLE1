USE SAKILA;

-- DESCRIBE ACTOR;

SELECT last_name FROM actor
	WHERE first_name='JOHN';
    
SELECT * FROM actor
	WHERE last_name='NEESON';
    
SELECT * FROM actor
	WHERE actor_id MOD(10) = 0;
    
SELECT description FROM film
	WHERE film_id = 100;

SELECT * FROM film
	WHERE rating = 'R';
    
SELECT * FROM film
	WHERE rating != 'R';
    
SELECT * FROM film
	ORDER BY length
    LIMIT 10;
    
--
    
SELECT * FROM film
	WHERE special_features LIKE '%Deleted Scenes%';
    
SELECT a.last_name,
       COUNT(DISTINCT a.first_name) as num_first_names
FROM actor AS a
GROUP BY a.last_name
HAVING COUNT(DISTINCT a.first_name) > 1
ORDER BY num_first_names ASC;


SELECT fa.actor_id, fa.film_id, actor.first_name, actor.last_name,
       COUNT(DISTINCT fa.film_id) as num_appearances
FROM film_actor AS fa
INNER JOIN actor ON fa.actor_id=actor.actor_id
GROUP BY fa.actor_id
HAVING num_appearances > 1
ORDER BY num_appearances DESC
LIMIT 1;

SELECT re.return_date, inventory.film_id, f.title
FROM rental AS re
INNER JOIN inventory ON re.inventory_id = inventory.inventory_id
INNER JOIN film as f ON f.film_id = inventory.film_id
HAVING f.title = 'ACADEMY DINOSAUR'
ORDER BY re.return_date DESC
LIMIT 1;

SELECT AVG(ALL film.length) FROM film;

SELECT AVG(f.length), film_category.category_id 
FROM film AS f
INNER JOIN film_category ON f.film_id = film_category.film_id
GROUP BY category_id;

SELECT * FROM film
WHERE description LIKE '%Deleted Scenes%';

SELECT COUNT(*) FROM film
WHERE film.release_year = '2010';

SELECT COUNT(fc.film_id), c.name, c.category_id, fc.film_id, fc.category_id FROM category AS c, film_category AS fc
WHERE c.name = 'horror' AND c.category_id = fc.category_id
GROUP BY c.category_id






